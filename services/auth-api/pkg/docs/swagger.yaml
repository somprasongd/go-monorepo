definitions:
  swagdto.Error400:
    properties:
      error:
        $ref: '#/definitions/swagdto.ErrorData400'
      requestId:
        example: 3b6272b9-1ef1-45e0
        type: string
      status:
        example: 400
        type: integer
    type: object
  swagdto.Error401:
    properties:
      error:
        $ref: '#/definitions/swagdto.ErrorData401'
      requestId:
        example: 3b6272b9-1ef1-45e0
        type: string
      status:
        example: 401
        type: integer
    type: object
  swagdto.Error404:
    properties:
      error:
        $ref: '#/definitions/swagdto.ErrorData404'
      requestId:
        example: 3b6272b9-1ef1-45e0
        type: string
      status:
        example: 404
        type: integer
    type: object
  swagdto.Error422:
    properties:
      error:
        $ref: '#/definitions/swagdto.ErrorData422'
      requestId:
        example: 3b6272b9-1ef1-45e0
        type: string
      status:
        example: 422
        type: integer
    type: object
  swagdto.Error500:
    properties:
      error:
        $ref: '#/definitions/swagdto.ErrorData500'
      requestId:
        example: 3b6272b9-1ef1-45e0
        type: string
      status:
        example: 500
        type: integer
    type: object
  swagdto.ErrorData400:
    properties:
      code:
        example: "400"
        type: string
      message:
        example: Bad Request
        type: string
    type: object
  swagdto.ErrorData401:
    properties:
      code:
        example: "401"
        type: string
      message:
        example: Unauthorized
        type: string
    type: object
  swagdto.ErrorData404:
    properties:
      code:
        example: "404"
        type: string
      message:
        example: Not Found
        type: string
    type: object
  swagdto.ErrorData422:
    properties:
      code:
        example: "422"
        type: string
      details:
        items:
          $ref: '#/definitions/swagdto.ErrorDetail'
        type: array
      message:
        example: invalid data see details
        type: string
    type: object
  swagdto.ErrorData500:
    properties:
      code:
        example: "500"
        type: string
      message:
        example: Internal Server Error
        type: string
    type: object
  swagdto.ErrorDetail:
    properties:
      message:
        example: name field is required
        type: string
      target:
        example: name
        type: string
    type: object
  swagdto.PagingResult:
    properties:
      count:
        example: 20
        type: integer
      limit:
        example: 10
        type: integer
      nextPage:
        example: 2
        type: integer
      page:
        example: 1
        type: integer
      prevPage:
        example: 0
        type: integer
      totalPage:
        example: 2
        type: integer
    type: object
  swagdto.Response:
    properties:
      data: {}
      requestId:
        example: 3b6272b9-1ef1-45e0
        type: string
      status:
        example: 200
        type: integer
    type: object
  swagdto.ResponseWithPage:
    properties:
      _pagination:
        $ref: '#/definitions/swagdto.PagingResult'
      data: {}
      requestId:
        example: 3b6272b9-1ef1-45e0
        type: string
      status:
        example: 200
        type: integer
    type: object
  swagger.AuthResponse:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InVzZXJAbWFpbC5jb20iLCJpYXQiOjE2NTk0MzI5NTYsInN1YiI6Ijk2YWUzNWM0LTE0Y2ItNDAzMy1iYTMwLTVkYTBmNjA2NjFiNCJ9.spR28QwRVbmOjJPu6iwRhA19jOpxYtgpRRsiaNWGTYk
        type: string
      user:
        $ref: '#/definitions/swagger.UserInfo'
    type: object
  swagger.AuthSampleData:
    properties:
      auth:
        $ref: '#/definitions/swagger.AuthResponse'
    type: object
  swagger.CreateUserFrom:
    properties:
      email:
        description: 'Required: true'
        example: user@mail.com
        type: string
      password:
        description: 'Required: true'
        example: password1234
        type: string
    type: object
  swagger.ErrCreateSampleData:
    properties:
      code:
        example: "422"
        type: string
      details:
        items:
          $ref: '#/definitions/swagger.ErrorDetailCreate'
        type: array
      message:
        example: invalid data see details
        type: string
    type: object
  swagger.ErrLoginSampleData:
    properties:
      code:
        example: "422"
        type: string
      details:
        items:
          $ref: '#/definitions/swagger.ErrorDetailLogin'
        type: array
      message:
        example: invalid data see details
        type: string
    type: object
  swagger.ErrRegisterSampleData:
    properties:
      code:
        example: "422"
        type: string
      details:
        items:
          $ref: '#/definitions/swagger.ErrorDetailRegister'
        type: array
      message:
        example: invalid data see details
        type: string
    type: object
  swagger.ErrUpdateSampleData:
    properties:
      code:
        example: "422"
        type: string
      details:
        items:
          $ref: '#/definitions/swagger.ErrorDetailUpdate'
        type: array
      message:
        example: invalid data see details
        type: string
    type: object
  swagger.ErrorDetailCreate:
    properties:
      message:
        example: email field is required
        type: string
      target:
        example: email
        type: string
    type: object
  swagger.ErrorDetailLogin:
    properties:
      message:
        example: password field is required
        type: string
      target:
        example: password
        type: string
    type: object
  swagger.ErrorDetailRegister:
    properties:
      message:
        example: email field is required
        type: string
      target:
        example: email
        type: string
    type: object
  swagger.ErrorDetailUpdate:
    properties:
      message:
        example: password_old field is required
        type: string
      target:
        example: password_old
        type: string
    type: object
  swagger.LoginForm:
    properties:
      email:
        description: 'Required: true'
        example: user@mail.com
        type: string
      password:
        description: 'Required: true'
        example: password1234
        type: string
    type: object
  swagger.RegisterForm:
    properties:
      email:
        description: 'Required: true'
        example: user@mail.com
        type: string
      password:
        description: 'Required: true'
        example: password1234
        type: string
    type: object
  swagger.UpdateUserPasswordForm:
    properties:
      password_new:
        description: 'Required: true'
        example: 1234password
        type: string
      password_old:
        description: 'Required: true'
        example: password1234
        type: string
    type: object
  swagger.UserInfo:
    properties:
      email:
        example: user@mail.com
        type: string
      id:
        example: bfbc2a69-9825-4a0e-a8d6-ffb985dc719c
        type: string
      role:
        example: user
        type: string
    type: object
  swagger.UserInfoSampleData:
    properties:
      user:
        $ref: '#/definitions/swagger.UserInfo'
    type: object
  swagger.UserRepsonse:
    properties:
      email:
        example: user@mail.com
        type: string
      id:
        example: bfbc2a69-9825-4a0e-a8d6-ffb985dc719c
        type: string
      role:
        example: user
        type: string
    type: object
  swagger.UserSampleData:
    properties:
      user:
        $ref: '#/definitions/swagger.UserRepsonse'
    type: object
  swagger.UserSampleListData:
    properties:
      users:
        items:
          $ref: '#/definitions/swagger.UserRepsonse'
        type: array
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: Login Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/swagger.LoginForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/swagdto.Response'
            - properties:
                data:
                  $ref: '#/definitions/swagger.AuthSampleData'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/swagdto.Error401'
        "422":
          description: Unprocessable Entity
          schema:
            allOf:
            - $ref: '#/definitions/swagdto.Error422'
            - properties:
                error:
                  $ref: '#/definitions/swagger.ErrLoginSampleData'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagdto.Error500'
      summary: Login
      tags:
      - Auth
  /auth/profile:
    get:
      description: Get a specific user by id
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/swagdto.Response'
            - properties:
                data:
                  $ref: '#/definitions/swagger.UserInfoSampleData'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/swagdto.Error401'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagdto.Error500'
      summary: Get a user profile
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/swagger.RegisterForm'
      produces:
      - application/json
      responses:
        "201":
          description: ""
        "422":
          description: Unprocessable Entity
          schema:
            allOf:
            - $ref: '#/definitions/swagdto.Error422'
            - properties:
                error:
                  $ref: '#/definitions/swagger.ErrRegisterSampleData'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagdto.Error500'
      summary: Register a new user
      tags:
      - Auth
  /users:
    get:
      consumes:
      - application/json
      description: You can filter all existing users by listing them.
      parameters:
      - description: Go to a specific page number. Start with 1
        in: query
        name: page
        type: integer
      - description: Page size for the data
        in: query
        name: limit
        type: integer
      - description: 'Page order. Eg: text desc,createdAt desc'
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/swagdto.ResponseWithPage'
            - properties:
                data:
                  $ref: '#/definitions/swagger.UserSampleListData'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/swagdto.Error400'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagdto.Error500'
      summary: List all existing users
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Add a new user
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/swagger.CreateUserFrom'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/swagdto.Response'
            - properties:
                data:
                  $ref: '#/definitions/swagger.UserSampleData'
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            allOf:
            - $ref: '#/definitions/swagdto.Error422'
            - properties:
                error:
                  $ref: '#/definitions/swagger.ErrCreateSampleData'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagdto.Error500'
      summary: Add a new user
      tags:
      - User
  /users/{id}:
    delete:
      description: Delete a specific user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/swagdto.Error400'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/swagdto.Error404'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagdto.Error500'
      summary: Delete a user
      tags:
      - User
    get:
      description: Get a specific user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/swagdto.Response'
            - properties:
                data:
                  $ref: '#/definitions/swagger.UserSampleData'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/swagdto.Error400'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/swagdto.Error404'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagdto.Error500'
      summary: Get a user
      tags:
      - User
    patch:
      description: Update a specific user password by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User Password
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/swagger.UpdateUserPasswordForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/swagdto.Response'
            - properties:
                data:
                  $ref: '#/definitions/swagger.UserSampleData'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/swagdto.Error400'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/swagdto.Error404'
        "422":
          description: Unprocessable Entity
          schema:
            allOf:
            - $ref: '#/definitions/swagdto.Error422'
            - properties:
                error:
                  $ref: '#/definitions/swagger.ErrUpdateSampleData'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagdto.Error500'
      summary: Update a user password
      tags:
      - User
swagger: "2.0"
