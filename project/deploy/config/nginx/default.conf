# upstream auth {
#   server auth-api:8080;

# upstream todo {
#   server todo-api:8080;
# }

# upstream auth {
#   server host.docker.internal:8080;
# }

# upstream todo {
#   server host.docker.internal:8081;
# }

upstream auth-api {
    server auth-api:8080;
}

upstream todo-api {
    server todo-api:8080;
}

server {
  listen       80;
  listen  [::]:80;
  server_name  _;

  error_page 404 /;
	
	# add_header X-Request-Id $request_id; # Return to client

  # location / {      
  #     proxy_set_header X-Real-IP $remote_addr;
  #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #     proxy_set_header X-NginX-Proxy true;
  #     proxy_set_header Host $http_host;
  #     proxy_cache_bypass $http_upgrade;
  #     proxy_redirect off;
      
  #     proxy_pass http://web:3000;
  # }

  # internal only
  location ~ /api/v1/auth/verify {
      deny all;
  }

  location @error401 {
    default_type application/json;
    return 401 '{"status":"401","error":{"code": 401,"message": "the token is invalid or expired"}}';
  }

  location /auth-verify {
    internal;

    set $query '';
    if ($request_uri ~* "[^\?]+\?(.*)$") {
        set $query $1;
    }

    proxy_pass        http://auth-api/api/v1/auth/verify?$query;
    
    proxy_redirect    off;
    proxy_pass_request_body off;
    proxy_set_header Content-Length "";
    proxy_set_header X-Original-URI $request_uri;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $server_name;     
    proxy_set_header X-Request-Id $request_id; # Pass to app server
  }

  location ~ ^/(api/v1/auth)|(api/v1/users)/ {
    proxy_pass http://auth-api;

    proxy_redirect off;
    proxy_cache_bypass $http_upgrade;
    proxy_set_header Host $http_host; # proxy_set_header  Host $host;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $server_name;
    proxy_set_header X-Request-Id $request_id; # Pass to app server
  }

  location ~ ^/(api/v1/todos) {
    auth_request /auth-verify;
    error_page 401 = @error401;

    auth_request_set $auth_status $upstream_status;
    auth_request_set $x_id_token $upstream_http_x_id_token;
    # auth_request_set $x_id_token $sent_http_x_id_token; 

    proxy_pass http://todo-api;
    
    proxy_redirect off;
    proxy_cache_bypass $http_upgrade;
    proxy_set_header Host $http_host; # proxy_set_header  Host $host;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $server_name;
    proxy_set_header X-Request-Id $request_id; # Pass to app server
    proxy_set_header X-Id-Token $x_id_token;        
  }

}    